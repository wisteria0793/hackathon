{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/tomoe/hackathon/raku/raku_trip/src/pages/Itineraries.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"../styles/Itineraries.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Itineraries = () => {\n  _s();\n  const [tripDetails, setTripDetails] = useState({\n    destination: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    travelers: 1,\n    budget: \"\"\n  });\n  const [travelPlan, setTravelPlan] = useState([]); // Chat-GPTからのプランデータを格納\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n\n  // Chat-GPTからの応答をバックエンド経由で取得\n  const sendTextToBackend = async () => {\n    if (userMessage.trim() === \"\") return;\n\n    // ユーザーのメッセージを追加\n    setChatMessages([...chatMessages, {\n      sender: \"user\",\n      text: userMessage\n    }]);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/chat/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: userMessage\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Chat-GPTの応答をチャットに追加\n        setChatMessages([...chatMessages, {\n          sender: \"user\",\n          text: userMessage\n        }, {\n          sender: \"bot\",\n          text: data.response\n        }]);\n        setTravelPlan(data.plan || []); // 旅行プランデータがあれば更新\n      } else {\n        console.error(\"Error:\", data.error);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    // メッセージ入力をリセット\n    setUserMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.travelPlanner,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u65C5\\u884C\\u30D7\\u30E9\\u30F3\\u30CB\\u30F3\\u30B0\\u30B5\\u30FC\\u30D3\\u30B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.activitySection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u65C5\\u884C\\u30D7\\u30E9\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), travelPlan.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u65C5\\u884C\\u30D7\\u30E9\\u30F3\\u306F\\u307E\\u3060\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this) : travelPlan.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.dayPlan,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: day.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), day.activities.map((activity, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.activityItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: activity.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: activity.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\xA5\", activity.cost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chatSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat-GPT\\u3068\\u3084\\u308A\\u3068\\u308A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.chatBox,\n        children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.chatMessage} ${msg.sender === \"user\" ? styles.userMessage : styles.botMessage}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.chatInput,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u8CEA\\u554F\\u3084\\u8981\\u671B\\u3092\\u5165\\u529B\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendTextToBackend,\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Itineraries, \"ohHKtLJnAI+/1DIJtAOYXVgcp5s=\");\n_c = Itineraries;\nexport default Itineraries;\nvar _c;\n$RefreshReg$(_c, \"Itineraries\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Itineraries","_s","tripDetails","setTripDetails","destination","startDate","endDate","travelers","budget","travelPlan","setTravelPlan","chatMessages","setChatMessages","userMessage","setUserMessage","sendTextToBackend","trim","sender","text","response","fetch","method","headers","body","JSON","stringify","data","json","ok","plan","console","error","className","travelPlanner","children","mainSection","fileName","_jsxFileName","lineNumber","columnNumber","activitySection","length","map","day","index","dayPlan","activities","activity","idx","activityItem","time","description","cost","chatSection","chatBox","msg","chatMessage","botMessage","chatInput","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/GitHub/tomoe/hackathon/raku/raku_trip/src/pages/Itineraries.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"../styles/Itineraries.module.css\";\n\nconst Itineraries = () => {\n  const [tripDetails, setTripDetails] = useState({\n    destination: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    travelers: 1,\n    budget: \"\",\n  });\n\n  const [travelPlan, setTravelPlan] = useState([]); // Chat-GPTからのプランデータを格納\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n\n  // Chat-GPTからの応答をバックエンド経由で取得\n  const sendTextToBackend = async () => {\n    if (userMessage.trim() === \"\") return;\n\n    // ユーザーのメッセージを追加\n    setChatMessages([...chatMessages, { sender: \"user\", text: userMessage }]);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/chat/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ text: userMessage }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        // Chat-GPTの応答をチャットに追加\n        setChatMessages([\n          ...chatMessages,\n          { sender: \"user\", text: userMessage },\n          { sender: \"bot\", text: data.response },\n        ]);\n        setTravelPlan(data.plan || []); // 旅行プランデータがあれば更新\n      } else {\n        console.error(\"Error:\", data.error);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    // メッセージ入力をリセット\n    setUserMessage(\"\");\n  };\n\n  return (\n    <div className={styles.travelPlanner}>\n      <div className={styles.mainSection}>\n        <h1>旅行プランニングサービス</h1>\n\n        <div className={styles.activitySection}>\n          <h2>旅行プラン</h2>\n          {travelPlan.length === 0 ? (\n            <p>旅行プランはまだありません。</p>\n          ) : (\n            travelPlan.map((day, index) => (\n              <div key={index} className={styles.dayPlan}>\n                <h3>{day.day}</h3>\n                {day.activities.map((activity, idx) => (\n                  <div key={idx} className={styles.activityItem}>\n                    <span>{activity.time}</span>\n                    <span>{activity.description}</span>\n                    <span>¥{activity.cost}</span>\n                  </div>\n                ))}\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n\n      <div className={styles.chatSection}>\n        <h2>Chat-GPTとやりとり</h2>\n        <div className={styles.chatBox}>\n          {chatMessages.map((msg, index) => (\n            <div\n              key={index}\n              className={`${styles.chatMessage} ${\n                msg.sender === \"user\"\n                  ? styles.userMessage\n                  : styles.botMessage\n              }`}\n            >\n              {msg.text}\n            </div>\n          ))}\n        </div>\n        <div className={styles.chatInput}>\n          <input\n            type=\"text\"\n            placeholder=\"質問や要望を入力\"\n            value={userMessage}\n            onChange={(e) => setUserMessage(e.target.value)}\n          />\n          <button onClick={sendTextToBackend}>送信</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Itineraries;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}